openapi: 3.0.3
info:
  title: Event-api
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login/google:
    get:
      summary: ''
      operationId: getApiLoginGoogle
      description: ''
      parameters: []
      responses:
        302:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"refresh\" content=\"0;url='https://accounts.google.com/o/oauth2/auth?client_id=49742893477-kav1h6amrqvm7srf3hlor5tq5h0f16fa.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fapi%2Flogin%2Fgoogle%2Fcallback&amp;scope=openid+profile+email&amp;response_type=code&amp;state=DDdfj43OAOXJUQpLssTNV7sSzDNhthKF07mezZvC'\" />\n\n        <title>Redirecting to https://accounts.google.com/o/oauth2/auth?client_id=49742893477-kav1h6amrqvm7srf3hlor5tq5h0f16fa.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fapi%2Flogin%2Fgoogle%2Fcallback&amp;scope=openid+profile+email&amp;response_type=code&amp;state=DDdfj43OAOXJUQpLssTNV7sSzDNhthKF07mezZvC</title>\n    </head>\n    <body>\n        Redirecting to <a href=\"https://accounts.google.com/o/oauth2/auth?client_id=49742893477-kav1h6amrqvm7srf3hlor5tq5h0f16fa.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fapi%2Flogin%2Fgoogle%2Fcallback&amp;scope=openid+profile+email&amp;response_type=code&amp;state=DDdfj43OAOXJUQpLssTNV7sSzDNhthKF07mezZvC\">https://accounts.google.com/o/oauth2/auth?client_id=49742893477-kav1h6amrqvm7srf3hlor5tq5h0f16fa.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fapi%2Flogin%2Fgoogle%2Fcallback&amp;scope=openid+profile+email&amp;response_type=code&amp;state=DDdfj43OAOXJUQpLssTNV7sSzDNhthKF07mezZvC</a>.\n    </body>\n</html>"
      tags:
        - Endpoints
      security: []
  /api/login/google/callback:
    get:
      summary: ''
      operationId: getApiLoginGoogleCallback
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status_code: 500
                  message: 'An error occured while processing the request'
                properties:
                  status_code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: 'An error occured while processing the request'
      tags:
        - Endpoints
      security: []
  /api/auth/signup:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tefnuvlabrywaqzx
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: delpha.howell@example.com
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '#e3r52]K@N@mrP'
              required:
                - name
                - email
                - password
      security: []
  /api/auth/login:
    post:
      summary: ''
      operationId: postApiAuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: harmony.bahringer@example.com
                password:
                  type: string
                  description: ''
                  example: '9O)YX}?hh5I1P'
              required:
                - email
                - password
      security: []
  /api/events:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status_code: 200
                  message: 'Event returned sucessfully'
                  data:
                    -
                      id: 2
                      title: 'CityJs Conference'
                      description: 'Tech conference'
                      start_date: '2023-10-10'
                      end_date: '2023-10-15'
                      start_time: '09:10:00'
                      end_time: '04:30:00'
                      tags: tech
                      is_paid_event: false
                      ticket_price: 0
                      number_of_available_tickets: 5000
                      registration_closing_date: '2023-10-04'
                      image_url: 'http://localhost/event_fliers/1700505001.jpg'
                    -
                      id: 1
                      title: 'Latest Conference'
                      description: 'Tech conference'
                      start_date: '2023-10-10'
                      end_date: '2023-10-15'
                      start_time: '09:10:00'
                      end_time: '04:30:00'
                      tags: tech
                      is_paid_event: false
                      ticket_price: 0
                      number_of_available_tickets: 5000
                      registration_closing_date: '2023-10-04'
                      image_url: 'http://localhost/event_fliers/1700504925.jpg'
                properties:
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Event returned sucessfully'
                  data:
                    type: array
                    example:
                      -
                        id: 2
                        title: 'CityJs Conference'
                        description: 'Tech conference'
                        start_date: '2023-10-10'
                        end_date: '2023-10-15'
                        start_time: '09:10:00'
                        end_time: '04:30:00'
                        tags: tech
                        is_paid_event: false
                        ticket_price: 0
                        number_of_available_tickets: 5000
                        registration_closing_date: '2023-10-04'
                        image_url: 'http://localhost/event_fliers/1700505001.jpg'
                      -
                        id: 1
                        title: 'Latest Conference'
                        description: 'Tech conference'
                        start_date: '2023-10-10'
                        end_date: '2023-10-15'
                        start_time: '09:10:00'
                        end_time: '04:30:00'
                        tags: tech
                        is_paid_event: false
                        ticket_price: 0
                        number_of_available_tickets: 5000
                        registration_closing_date: '2023-10-04'
                        image_url: 'http://localhost/event_fliers/1700504925.jpg'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        title:
                          type: string
                          example: 'CityJs Conference'
                        description:
                          type: string
                          example: 'Tech conference'
                        start_date:
                          type: string
                          example: '2023-10-10'
                        end_date:
                          type: string
                          example: '2023-10-15'
                        start_time:
                          type: string
                          example: '09:10:00'
                        end_time:
                          type: string
                          example: '04:30:00'
                        tags:
                          type: string
                          example: tech
                        is_paid_event:
                          type: boolean
                          example: false
                        ticket_price:
                          type: integer
                          example: 0
                        number_of_available_tickets:
                          type: integer
                          example: 5000
                        registration_closing_date:
                          type: string
                          example: '2023-10-04'
                        image_url:
                          type: string
                          example: 'http://localhost/event_fliers/1700505001.jpg'
      tags:
        - Endpoints
      security: []
  '/api/events/search/{search}':
    get:
      summary: 'search the specified resource from storage.'
      operationId: searchTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status_code: 200
                  message: 'search result returned sucessfully'
                  data:
                    current_page: 1
                    data: []
                    first_page_url: 'http://localhost/api/events/search/ut?page=1'
                    from: null
                    last_page: 1
                    last_page_url: 'http://localhost/api/events/search/ut?page=1'
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/events/search/ut?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    next_page_url: null
                    path: 'http://localhost/api/events/search/ut'
                    per_page: 10
                    prev_page_url: null
                    to: null
                    total: 0
                properties:
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'search result returned sucessfully'
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example: []
                      first_page_url:
                        type: string
                        example: 'http://localhost/api/events/search/ut?page=1'
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: 'http://localhost/api/events/search/ut?page=1'
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/events/search/ut?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        example: null
                      path:
                        type: string
                        example: 'http://localhost/api/events/search/ut'
                      per_page:
                        type: integer
                        example: 10
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: search
        description: 'The search.'
        example: ut
        required: true
        schema:
          type: string
  /api/auth/logout:
    post:
      summary: ''
      operationId: postApiAuthLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/users/profile:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jpgcuvmg
                phone_number:
                  type: string
                  description: ''
                  example: quasi
                gender:
                  type: string
                  description: ''
                  example: female
                  enum:
                    - male
                    - female
                avatar:
                  type: string
                  description: ''
                  example: null
      security: []
  '/api/users/profile/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the profile.'
        example: 3
        required: true
        schema:
          type: integer
  /api/users/event:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: nmxvyiafxkitpelsd
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Maxime et sed omnis ipsum.'
                start_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-11-24'
                end_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date after <code>start_date</code>.'
                  example: '2074-08-23'
                start_time:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '23:04'
                end_time:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>. Must be a date after <code>stat_time</code>.'
                  example: '1994-11-20'
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eigbrmwuhxfovb
                tags:
                  type: string
                  description: ''
                  example: null
                is_paid_event:
                  type: boolean
                  description: ''
                  example: true
                ticket_price:
                  type: number
                  description: ''
                  example: 3199615.83
                number_of_available_tickets:
                  type: number
                  description: ''
                  example: 101507.91596856
                registration_closing_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date before <code>end_date</code>.'
                  example: '1999-07-28'
                image:
                  type: string
                  description: 'Must not be greater than 5048 characters.'
                  example: kbchcplgeetyywhrpsudw
      security: []
  '/api/users/event/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: zjbmqzvawkrghpityf
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Delectus enim velit sit hic maxime.'
                start_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-11-24'
                end_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date after <code>start_date</code>.'
                  example: '2119-10-13'
                start_time:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '23:04'
                end_time:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>. Must be a date after <code>stat_time</code>.'
                  example: '2083-04-27'
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wfslkhiauqnucrwjlbtkq
                tags:
                  type: string
                  description: ''
                  example: null
                is_paid_event:
                  type: boolean
                  description: ''
                  example: true
                ticket_price:
                  type: number
                  description: ''
                  example: 100061769.0
                number_of_available_tickets:
                  type: number
                  description: ''
                  example: 1.1337922
                registration_closing_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date before <code>end_date</code>.'
                  example: '2019-09-14'
                image:
                  type: string
                  description: 'Must not be greater than 5048 characters.'
                  example: do
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/search/{search}':
    get:
      summary: 'search the specified resource from storage.'
      operationId: searchTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: search
        description: 'The search.'
        example: quisquam
        required: true
        schema:
          type: string
  /api/event/registered:
    get:
      summary: 'Gett all registered event from the storage'
      operationId: gettAllRegisteredEventFromTheStorage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/event/register/{event_id}':
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/event/unregister/{event_id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: event_id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
